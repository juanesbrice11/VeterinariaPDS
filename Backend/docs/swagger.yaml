openapi: 3.0.0
info:
  title: API de Veterinaria
  version: 1.0.0
  description: Documentación de la API para gestión de usuarios, autenticación y servicios veterinarios
servers:
  - url: http://localhost:3000/api

paths:
  /auth/signup:
    post:
      summary: Registro de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUp'
      responses:
        '201':
          description: Usuario registrado exitosamente

  /auth/signin:
    post:
      summary: Inicio de sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignIn'
      responses:
        '200':
          description: Inicio de sesión exitoso

  /auth/logout:
    post:
      summary: Cierre de sesión
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sesión cerrada

  /auth/reset-password-request:
    post:
      summary: Solicitar restablecimiento de contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Enlace enviado

  /auth/reset-password:
    post:
      summary: Restablecer contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Contraseña actualizada

  /auth/test-email:
    post:
      summary: Enviar correo de prueba
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                to:
                  type: string
                subject:
                  type: string
                html:
                  type: string
      responses:
        '200':
          description: Correo enviado

  /users:
    get:
      summary: Obtener todos los usuarios
      responses:
        '200':
          description: Lista de usuarios

  /users/me:
    get:
      summary: Obtener mi perfil
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Datos del perfil

    put:
      summary: Editar mi perfil
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
      responses:
        '200':
          description: Perfil actualizado

  /users/me/password:
    patch:
      summary: Cambiar mi contraseña
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Contraseña cambiada

  /services:
    get:
      summary: Obtener todos los servicios
      responses:
        '200':
          description: Lista de servicios

    post:
      summary: Crear servicio
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '201':
          description: Servicio creado

  /services/{id}:
    get:
      summary: Obtener servicio por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Datos del servicio

    put:
      summary: Actualizar servicio
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '200':
          description: Servicio actualizado

    delete:
      summary: Desactivar servicio
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Servicio desactivado

  /products:
    get:
      summary: Obtener todos los productos
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de productos

    post:
      summary: Crear producto
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                imageUrl:
                  type: string
                stock:
                  type: integer
      responses:
        '201':
          description: Producto creado

  /products/{id}:
    get:
      summary: Obtener producto por ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Producto encontrado

    put:
      summary: Actualizar producto
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                imageUrl:
                  type: string
                stock:
                  type: integer
      responses:
        '200':
          description: Producto actualizado

    delete:
      summary: Eliminar producto
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Producto eliminado

  /pets:
    get:
      summary: Obtener mis mascotas
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de mascotas del usuario

    post:
      summary: Crear una mascota
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                species:
                  type: string
                breed:
                  type: string
                color:
                  type: string
                birthDate:
                  type: string
                gender:
                  type: string
                weight:
                  type: number
      responses:
        '201':
          description: Mascota creada

  /pets/{id}:
    get:
      summary: Obtener mascota por ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Datos de la mascota

    put:
      summary: Actualizar mascota
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                species:
                  type: string
                breed:
                  type: string
                color:
                  type: string
                birthDate:
                  type: string
                gender:
                  type: string
                weight:
                  type: number
      responses:
        '200':
          description: Mascota actualizada

    delete:
      summary: Eliminar mascota
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Mascota eliminada

  /medical-records:
    post:
      summary: Crear registro médico
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                petId:
                  type: integer
                date:
                  type: string
                description:
                  type: string
                procedureType:
                  type: string
      responses:
        '201':
          description: Registro creado

  /medical-records/pet/{petId}:
    get:
      summary: Obtener historial médico por mascota
      security:
        - bearerAuth: []
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Historial médico encontrado

  /appointments:
    get:
      summary: Obtener mis citas
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de citas del usuario

    post:
      summary: Crear nueva cita
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                petId:
                  type: integer
                serviceId:
                  type: integer
                appointmentDate:
                  type: string
      responses:
        '201':
          description: Cita agendada

  /appointments/{id}/cancel:
    patch:
      summary: Cancelar cita
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cita cancelada

  /appointments/{id}/status:
    patch:
      summary: Actualizar estado de cita (solo veterinario)
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [Confirmed, Completed]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Estado actualizado
  
  /notifications:
    get:
      summary: Obtener mis notificaciones (con paginación)
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Página a consultar (default: 1)
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Número de resultados por página (default: 10)
      responses:
        '200':
          description: Lista de notificaciones paginadas

  /notifications/{id}/read:
    patch:
      summary: Marcar notificación como leída
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Notificación marcada como leída
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /notifications/read-all:
    patch:
      summary: Marcar todas las notificaciones como leídas
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Todas las notificaciones marcadas como leídas
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserSignUp:
      type: object
      properties:
        name:
          type: string
          example: Juan Pérez
        email:
          type: string
          example: juan@example.com
        password:
          type: string
          example: MiClave123

    UserSignIn:
      type: object
      properties:
        email:
          type: string
          example: juan@example.com
        password:
          type: string
          example: MiClave123

    UserProfileUpdate:
      type: object
      properties:
        name:
          type: string
          example: Juan Modificado
        email:
          type: string
          example: nuevo@email.com

    Service:
      type: object
      properties:
        title:
          type: string
          example: Vacunación
        description:
          type: string
          example: Aplicación de vacunas a mascotas
        isActive:
          type: boolean
          example: true

    Product:
      type: object
      properties:
        name:
          type: string
          example: Shampoo para perro
        description:
          type: string
          example: Limpia y suaviza el pelaje
        price:
          type: number
          example: 19.99
        imageUrl:
          type: string
          example: https://miapp.com/imagenes/shampoo.jpg
        stock:
          type: integer
          example: 100

    Pet:
      type: object
      properties:
        name:
          type: string
          example: Max
        species:
          type: string
          example: perro
        breed:
          type: string
          example: labrador
        color:
          type: string
          example: marrón
        birthDate:
          type: string
          example: 2020-05-10
        gender:
          type: string
          example: macho
        weight:
          type: number
          example: 20.5

    Appointment:
      type: object
      properties:
        petId:
          type: integer
          example: 1
        serviceId:
          type: integer
          example: 2
        appointmentDate:
          type: string
          example: 2025-06-01T10:00:00

    MedicalRecord:
      type: object
      properties:
        petId:
          type: integer
          example: 1
        date:
          type: string
          example: 2025-04-15
        description:
          type: string
          example: Aplicación de vacuna triple felina
        procedureType:
          type: string
          example: vacuna
    
    Notification:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        petId:
          type: integer
        type:
          type: string
          example: Vacuna
        message:
          type: string
          example: Han pasado más de 12 meses desde la última vacuna de Max.
        sentAt:
          type: string
          format: date-time
        isRead:
          type: boolean
          example: false

  responses:
    Unauthorized:
      description: Token inválido o ausente
    Forbidden:
      description: Acceso denegado por rol
    NotFound:
      description: Recurso no encontrado
    BadRequest:
      description: Datos inválidos o faltantes
