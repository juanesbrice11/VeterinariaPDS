openapi: 3.0.0
info:
  title: API de Veterinaria
  version: 1.0.0
  description: Documentación de la API para gestión de usuarios, autenticación y servicios veterinarios
servers:
  - url: http://localhost:3000/api

paths:
  /auth/signup:
    post:
      summary: Registro de usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUp'
      responses:
        '201':
          description: Usuario registrado exitosamente

  /auth/signin:
    post:
      summary: Inicio de sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignIn'
      responses:
        '200':
          description: Inicio de sesión exitoso

  /auth/logout:
    post:
      summary: Cierre de sesión
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sesión cerrada

  /auth/reset-password-request:
    post:
      summary: Solicitar restablecimiento de contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Enlace enviado

  /auth/reset-password:
    post:
      summary: Restablecer contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Contraseña actualizada

  /auth/test-email:
    post:
      summary: Enviar correo de prueba
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                to:
                  type: string
                subject:
                  type: string
                html:
                  type: string
      responses:
        '200':
          description: Correo enviado

  /users:
    get:
      summary: Obtener todos los usuarios
      responses:
        '200':
          description: Lista de usuarios

  /users/me:
    get:
      summary: Obtener mi perfil
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Datos del perfil

    put:
      summary: Editar mi perfil
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
      responses:
        '200':
          description: Perfil actualizado

  /users/me/password:
    patch:
      summary: Cambiar mi contraseña
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Contraseña cambiada

  /services:
    get:
      summary: Obtener todos los servicios
      responses:
        '200':
          description: Lista de servicios

    post:
      summary: Crear servicio
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '201':
          description: Servicio creado

  /services/{id}:
    get:
      summary: Obtener servicio por ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Datos del servicio

    put:
      summary: Actualizar servicio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        '200':
          description: Servicio actualizado

    delete:
      summary: Desactivar servicio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Servicio desactivado

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserSignUp:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string

    UserSignIn:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    UserProfileUpdate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string

    Service:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        isActive:
          type: boolean